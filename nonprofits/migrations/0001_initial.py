# Generated by Django 5.1.4 on 2025-01-09 05:43

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('donations', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DistributionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_name', models.CharField(max_length=100)),
                ('location_address', models.TextField()),
                ('distribution_date', models.DateField()),
                ('distribution_time', models.TimeField()),
                ('planned_quantity', models.PositiveIntegerField()),
                ('estimated_beneficiaries', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('planned', 'Planned'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='planned', max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('coordinator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='coordinated_distributions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DistributionRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actual_quantity_distributed', models.PositiveIntegerField()),
                ('actual_beneficiaries_served', models.PositiveIntegerField()),
                ('distribution_start_time', models.DateTimeField()),
                ('distribution_end_time', models.DateTimeField()),
                ('feedback', models.TextField(blank=True, null=True)),
                ('challenges_faced', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='distribution_records', to=settings.AUTH_USER_MODEL)),
                ('distribution_plan', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='record', to='nonprofits.distributionplan')),
            ],
        ),
        migrations.CreateModel(
            name='DonationManagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending_review', 'Pending Review'), ('accepted', 'Accepted by Nonprofit'), ('pickup_scheduled', 'Pickup Scheduled'), ('in_transit', 'In Transit'), ('received', 'Received at Nonprofit'), ('rejected', 'Rejected')], default='pending_review', max_length=20)),
                ('nonprofit_notes', models.TextField(blank=True, help_text='Internal notes about this donation', null=True)),
                ('scheduled_pickup_time', models.DateTimeField(blank=True, null=True)),
                ('received_at', models.DateTimeField(blank=True, null=True)),
                ('assigned_volunteer', models.ForeignKey(blank=True, limit_choices_to={'role': 'volunteer'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_pickups', to=settings.AUTH_USER_MODEL)),
                ('donation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='nonprofit_management', to='donations.donation')),
                ('received_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='received_donations', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FoodInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('received_quantity', models.PositiveIntegerField()),
                ('available_quantity', models.PositiveIntegerField()),
                ('storage_location', models.CharField(max_length=100)),
                ('storage_type', models.CharField(choices=[('refrigerated', 'Refrigerated'), ('frozen', 'Frozen'), ('dry', 'Dry Storage'), ('hot', 'Hot Storage')], max_length=20)),
                ('expiry_date', models.DateTimeField()),
                ('quality_check_passed', models.BooleanField(default=True)),
                ('quality_notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('donation_management', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='inventory', to='nonprofits.donationmanagement')),
            ],
            options={
                'verbose_name_plural': 'Food Inventories',
            },
        ),
        migrations.AddField(
            model_name='distributionplan',
            name='inventory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='distribution_plans', to='nonprofits.foodinventory'),
        ),
    ]
